
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to master.

image: maven:3.8.3-jdk-11
clone:
  depth: full    # SonarCloud scanner needs the full history to assign issues properly
  
  definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
    - step: &build-test-sonarcloud
        name: Build, test and analyze on SonarCloud
        caches:
          - maven
          - sonar
        script:
          - mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        artifacts:
          - target/**


pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            script:
              - mvn test
        - step:
            name: SonarCloud
            script:
              - pipe: sonarsource/sonarcloud-scan:1.2.1
              - pipe: sonarsource/sonarcloud-quality-gate:0.1.4
  branches:
    master:
      - step:
          name: Build and Test
          script:
            - mvn clean install
            - IMAGE_NAME=product-service-docker
            - docker build . --file Dockerfile --tag ${IMAGE_NAME}
            - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
          services:
            - docker
          caches:
            - docker
          artifacts:
            - "*.tar"
      - step:
          name: Deploy to Production
          deployment: Production
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE_NAME=product-service-docker
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="prod-0.1.${BITBUCKET_BUILD_NUMBER}"
            - IMAGE=${DOCKERHUB_USERNAME}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:latest"
            - docker push "${IMAGE}:latest"
          services:
            - docker
    development: 
          - step: *build-test-sonarcloud
          
